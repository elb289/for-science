{
  "author": {
    "name": "James Sapara",
    "email": "jsapara@slicedprojects.ca"
  },
  "contributors": [],
  "name": "connect-handlebars",
  "description": "Connect middleware for Handlebars",
  "version": "0.0.5",
  "repository": {
    "type": "git",
    "url": "git://github.com/interlock/connect-handlebars.git"
  },
  "keywords": [
    "Handlebars",
    "Connect",
    "Express",
    "middleware"
  ],
  "homepage": "http://github.com/interlock/connect-handlebars",
  "bugs": {
    "url": "https://github.com/interlock/connect-handlebars/issues"
  },
  "main": "lib/connect-handlebars.js",
  "engines": {
    "node": "*"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/interlock/connect-handlebars/blob/master/LICENSE"
    }
  ],
  "dependencies": {
    "handlebars": ">= 1.0.5beta"
  },
  "devDependencies": {
    "connect": "*",
    "jasmine-node": "*"
  },
  "scripts": {
    "test": "jasmine-node ./specs"
  },
  "readme": "# Introduction\n\n`connect-handlebars` is [Connect](http://www.senchalabs.org/connect/)\nmiddleware that pre-compiles [handlebars](http://handlebarsjs.com/) to JS.\n Since [express](http://expressjs.com) is built on top of Connect,\n`connect-handlebars` will allow you to compile handlebars templates with expressjs.\n\n# Installation\n\n    npm install connect-handlebars\n\n# Usage\n\nExample in express:\n\n    var connect_handlebars = require('connect-handlebars')\n    app = require('express').createServer()\n\n    app.use(\"/templates.js\", connect_handlebars(\"path/to/handles/templates\", {\n      exts: ['hbs','handlebars']\n    }));\n\n    app.listen(80);\n\nThe middleware builder takes two arguments `source` and `options`\n\n* `source`: The path to the root directory of .handlebars files to compile.\n* `options`: Object of options with the following keys\n  * `exts`: String|Array of file extensions to pre-compille. (default: ['handlebars'])\n  * `exts_re`: RegExp instance for matching file extensions you want to match. Overrides `exts`\n  * `recursive`: bool indicating if sub directories are searched (default: true)\n  * `encoding`: String indicating the encoding to use (default: utf8)\n  * `cache`: boolean indicating if you want to use caching (default: true)\n\n# Testing\n\n  npm test\n\nSpecs for the Jasmine tests are in ./specs\n",
  "readmeFilename": "README.md",
  "_id": "connect-handlebars@0.0.5",
  "dist": {
    "shasum": "d4258c1341f8c2eb79e25f7c5a81c0393ff170b0"
  },
  "_from": "connect-handlebars@*",
  "_resolved": "https://registry.npmjs.org/connect-handlebars/-/connect-handlebars-0.0.5.tgz"
}
